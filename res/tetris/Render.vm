function Render.init 0
push constant 10
call Array.new 1
pop static 1
push constant 0
return
function Render.dispose 0
push static 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Render.setScreenOffset 0
push argument 0
pop static 0
push constant 0
return
function Render.drawTetrominoRow 4
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push local 0
push constant 10
push argument 1
call Math.multiply 2
add
pop local 3
push local 3
push argument 0
add
pop pointer 1
push that 0
pop local 1
push local 3
push constant 1
add
push argument 0
add
pop pointer 1
push that 0
pop local 2
push static 0
push local 0
add
push argument 1
push local 1
push local 2
call Render.render 4
pop temp 0
push local 0
push constant 2
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Render.drawTetromino 10
push argument 0
call Tetromino.getX 1
pop local 3
push argument 0
call Tetromino.getY 1
pop local 4
push argument 0
call Tetromino.getData 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 10
lt
not
if-goto WHILE_END0
push local 1
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 4
lt
not
if-goto WHILE_END1
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 4
lt
not
if-goto WHILE_END2
push local 2
push constant 4
push local 1
call Math.multiply 2
add
pop local 9
push local 2
push local 3
add
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 3
add
push static 1
add
push local 9
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 5
label WHILE_EXP3
push local 5
push constant 10
lt
not
if-goto WHILE_END3
push local 5
push static 1
add
pop pointer 1
push that 0
pop local 7
push local 5
push constant 1
add
push static 1
add
pop pointer 1
push that 0
pop local 8
push static 0
push local 5
add
push local 4
push local 1
add
push local 7
push local 8
call Render.render 4
pop temp 0
push local 5
push constant 2
add
pop local 5
goto WHILE_EXP3
label WHILE_END3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Render.clearTetromino 13
push argument 0
call Tetromino.getX 1
pop local 1
push argument 0
call Tetromino.getY 1
pop local 2
push argument 0
call Tetromino.getData 1
pop local 0
push constant 0
pop local 8
label WHILE_EXP0
push local 8
push constant 10
lt
not
if-goto WHILE_END0
push local 8
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 8
push constant 1
add
pop local 8
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 8
label WHILE_EXP1
push local 8
push constant 4
lt
not
if-goto WHILE_END1
push constant 0
pop local 9
label WHILE_EXP2
push local 9
push constant 4
lt
not
if-goto WHILE_END2
push local 9
push constant 4
push local 8
call Math.multiply 2
add
pop local 10
push local 9
push local 1
add
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 9
push local 1
add
push static 1
add
push local 10
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 9
push constant 1
add
pop local 9
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 3
label WHILE_EXP3
push local 3
push constant 10
lt
not
if-goto WHILE_END3
push local 3
push static 1
add
pop pointer 1
push that 0
pop local 4
push local 3
push constant 1
add
push static 1
add
pop pointer 1
push that 0
pop local 5
push constant 16384
push static 0
push local 3
add
push constant 2
call Math.divide 2
add
push local 2
push local 8
add
push constant 256
call Math.multiply 2
add
pop local 11
push local 4
push constant 8
call Math.multiply 2
pop local 6
push local 5
push constant 8
call Math.multiply 2
push constant 64
add
pop local 7
push constant 1
neg
pop local 12
push local 4
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 12
push constant 255
not
and
pop local 12
label IF_FALSE1
push local 5
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 12
push constant 255
and
pop local 12
label IF_FALSE2
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 11
push constant 32
add
pop local 11
push local 11
push local 11
call Memory.peek 1
push local 12
and
call Memory.poke 2
pop temp 0
push local 3
push constant 2
add
pop local 3
goto WHILE_EXP3
label WHILE_END3
push local 8
push constant 1
add
pop local 8
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Render.render 5
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 64
pop local 0
push constant 16384
push argument 0
push constant 2
call Math.divide 2
add
push argument 1
push constant 256
call Math.multiply 2
add
pop local 1
push argument 2
push constant 8
call Math.multiply 2
pop local 2
push argument 3
push constant 8
call Math.multiply 2
push local 0
add
pop local 3
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 0
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 1
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 2
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 3
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 4
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 5
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 6
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
push local 1
call Memory.peek 1
pop local 4
push local 1
push local 4
push local 2
push local 3
push constant 7
call Tetromino.combineIndices 3
or
call Memory.poke 2
pop temp 0
push constant 0
return
